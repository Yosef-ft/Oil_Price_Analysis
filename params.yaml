base:
  random_state: 42
  verbose: 1
  batch_size: 32
  epochs: 10  


data:
  # loading data
  dataset_csv : 'data/BrentOilPrices.csv'
  test_size: 60
  time_steps: 30



model:
  # LSTM model paramters
  layers:
  - name: InputLayer
    shape: [30,1]
  
  - name: LSTM
    units: 64
    activation: tanh
    return_sequences: false

  - name: Dense
    units: 8
    activation: relu

  - name: OutputLayer
    units: 1
    activation: linear

training:
  # Training LSTM model
  loss: MeanSquaredError
  optimizer: Adam
  learning_rate: 0.01
  metrics:
    - MeanAbsoluteError
    - MeanSquaredError
    - RootMeanSquaredError

  early_stopping:
    monitor: val_loss
    patience: 3
    mode: min



  model_path: models/model.joblib


output:
  report_dir: reports
  model_dir: models

report:
  # metrics, images

  model_path: 'models/LSTM.keras'
  metircs_file: 'reports/metrics.json'
  metrics_loss: 'reports/loss.png'
  metrics_mse: 'reports/mean_squared_error.png'
  metrics_mae: 'reports/mean_absolute_error.png'
  metrics_rmse: 'reports/root_mean_squared_error.png'